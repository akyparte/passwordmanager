{"version":3,"sources":["passwordManager/index.styles.ts","passwordManager/index.tsx","App.tsx","index.tsx"],"names":["baseStyles","container","margin","fontFamily","borderRadius","padding","boxShadow","position","mainBody","border","width","minHeight","title","textAlign","marginBottom","marginTop","formContainer","display","flexDirection","alignItems","savedPasswordBars","inputGroup","input","fontSize","outline","button","backgroundColor","color","cursor","toggleButton","themeToggleButton","top","right","backupPasswordButton","height","marginLeft","errorMessage","listItem","listStyleType","passwordList","list","styles","deleteButton","lightContainer","darkContainer","lightMainBody","darkMainBody","inputLight","inputDark","passwordSection","SecurePasswordManager","encryptionKey","setEncryptionKey","useState","confirmKey","setConfirmKey","isUnlocked","setIsUnlocked","id","setId","password","setPassword","description","setDescription","passwords","setPasswords","keyError","setKeyError","theme","setTheme","useEffect","savedPasswords","localStorage","getItem","hashKey","JSON","parse","setItem","stringify","storedTheme","key","CryptoJS","SHA256","toString","validateKey","hasUpperCase","test","hasLowerCase","hasNumbers","hasSpecialChars","length","fileInputRef","useRef","React","createElement","style","onClick","toggleTheme","prevTheme","htmlFor","type","placeholder","value","onChange","e","target","unlockPasswordManager","savePassword","encryptedId","AES","encrypt","encryptedPassword","encryptedDescription","newPasswords","alert","ref","event","_event$target$files","file","files","console","log","reader","FileReader","onload","_e$target","restoredPasswords","result","updatedPasswords","forEach","restoredPassword","some","p","push","current","readAsText","backupPasswords","jsonPasswords","blob","Blob","link","document","href","URL","createObjectURL","download","click","handleFileSelect","_fileInputRef$current","map","entry","togglePassword","idElement","getElementById","passElement","descriptionElement","textContent","decryptedId","decrypt","enc","Utf8","decryptedPassword","decryptedDescription","Error","error","filter","deletePassword","App","className","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.e00154eb.chunk.js","sourcesContent":["// Base styles common to both light and dark themes\r\nconst baseStyles: { [key: string]: React.CSSProperties } = {\r\n    container: {\r\n      margin: \"20px\",\r\n      fontFamily: \"'Arial', sans-serif\",\r\n      borderRadius: \"8px\",\r\n      padding: \"20px\",\r\n      boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n      position: \"relative\",\r\n  \r\n    },\r\n    mainBody: {\r\n      border: '0.1px solid black',\r\n        width: '100%',\r\n        minHeight: '100vh',\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      marginBottom: '20px',\r\n      marginTop: '35px'\r\n    },\r\n    formContainer: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n    },\r\n    savedPasswordBars: {\r\n      display:'flex', \r\n      flexDirection:'row', \r\n      marginBottom: 5\r\n    },\r\n    inputGroup: {\r\n      marginBottom: \"15px\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      padding: \"10px\",\r\n      width: \"100%\",\r\n      borderRadius: \"4px\",\r\n      border: \"1px solid #ccc\",\r\n      fontSize: \"16px\",\r\n      outline: \"none\",\r\n    },\r\n    button: {\r\n      padding: \"10px 15px\",\r\n      backgroundColor: \"#007bff\",\r\n      color: \"#fff\",\r\n      border: \"none\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"16px\",\r\n    },\r\n    toggleButton: {\r\n      marginTop: \"10px\",\r\n      padding: \"5px 10px\",\r\n      backgroundColor: \"#28a745\",\r\n      color: \"#fff\",\r\n      border: \"none\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n      fontSize: \"14px\",\r\n    },\r\n    themeToggleButton: {\r\n      position: \"absolute\",\r\n      top: \"20px\",\r\n      right: \"20px\",\r\n      padding: \"10px\",\r\n      border: \"none\",\r\n      backgroundColor: \"#007bff\",\r\n      color: \"#fff\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n    },\r\n    backupPasswordButton: {\r\n      padding: \"3px 5px\",\r\n      border: \"none\",\r\n      backgroundColor: \"#007bff\",\r\n      color: \"#fff\",\r\n      borderRadius: \"4px\",\r\n      cursor: \"pointer\",\r\n      height:'auto',\r\n      marginLeft: '4px'\r\n    },\r\n    errorMessage: {\r\n      color: \"red\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"10px\",\r\n      textAlign: \"center\",\r\n    },\r\n    listItem: {\r\n      padding: \"10px\",\r\n      border: \"1px solid #ccc\",\r\n      marginBottom: \"5px\",\r\n      borderRadius: \"4px\",\r\n      listStyleType: \"none\"\r\n    },\r\n    passwordList: {\r\n      marginTop: \"20px\",\r\n    },\r\n  \r\n    list: {\r\n      listStyleType: \"none\",\r\n      marginBottom:3,\r\n    },\r\n  };\r\n  \r\n  // Light and dark theme specific styles\r\n  export const styles = {\r\n    deleteButton: {\r\n      marginTop: 10,\r\n      marginLeft: 10,\r\n      padding: \"6px 14px\",\r\n      backgroundColor: \"#ff6b6b\",\r\n      color: \"white\",\r\n      border: \"none\",\r\n      borderRadius: 5,\r\n      cursor: \"pointer\",\r\n    },\r\n    lightContainer: {\r\n      ...baseStyles.container,\r\n      backgroundColor: \"#fff\",\r\n      color: \"#000\",\r\n    },\r\n    darkContainer: {\r\n      ...baseStyles.container,\r\n      backgroundColor: \"#333\",\r\n      color: \"#fff\",\r\n    },\r\n    lightMainBody: {\r\n      ...baseStyles.mainBody,\r\n      backgroundColor: \"#fff\",\r\n  \r\n    },\r\n    darkMainBody: {\r\n      ...baseStyles.mainBody,\r\n      backgroundColor: \"#121212\",\r\n        \r\n    },\r\n    title: baseStyles.title,\r\n    formContainer: baseStyles.formContainer,\r\n    inputGroup: baseStyles.inputGroup,\r\n    inputLight: {\r\n      ...baseStyles.input,\r\n      backgroundColor: '#fff',\r\n    },\r\n    inputDark: {\r\n      ...baseStyles.input,\r\n      backgroundColor: '#D3D3D3',\r\n    },\r\n    themeToggleButton: baseStyles.themeToggleButton,\r\n    button: baseStyles.button,\r\n    toggleButton: baseStyles.toggleButton,\r\n    errorMessage: baseStyles.errorMessage, \r\n    passwordSection: baseStyles.passwordSection,\r\n    passwordList: baseStyles.passwordList,\r\n    list: baseStyles.list,\r\n    listItem: baseStyles.listItem,\r\n    backupPasswordButton: baseStyles.backupPasswordButton,\r\n    savedPasswordBars: baseStyles.savedPasswordBars,\r\n  };","import React, { useState, useEffect, useRef } from \"react\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { styles } from \"./index.styles\";\r\n\r\nconst SecurePasswordManager: React.FC = () => {\r\n  const [encryptionKey, setEncryptionKey] = useState<string>(\"\");\r\n  const [confirmKey, setConfirmKey] = useState<string>(\"\");\r\n  const [isUnlocked, setIsUnlocked] = useState<boolean>(false);\r\n  const [id, setId] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [passwords, setPasswords] = useState<{ id: string; password: string; description: string; }[]>([]);\r\n  const [keyError, setKeyError] = useState<string>(\"\");\r\n  const [theme, setTheme] = useState<string>(\"light\");\r\n\r\n  useEffect(() => {\r\n    if (encryptionKey) {\r\n      const savedPasswords = localStorage.getItem(`passwords_${hashKey(encryptionKey)}`);\r\n      if (savedPasswords) {\r\n        setPasswords(JSON.parse(savedPasswords));\r\n      } else {\r\n        setPasswords([]);\r\n      }\r\n    }\r\n  }, [isUnlocked, encryptionKey]);\r\n\r\n  useEffect(() => {\r\n    if (isUnlocked && encryptionKey) {\r\n      localStorage.setItem(`passwords_${hashKey(encryptionKey)}`, JSON.stringify(passwords));\r\n    }\r\n  }, [passwords, encryptionKey, isUnlocked]);\r\n\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem(\"theme\");\r\n    if (storedTheme) {\r\n      setTheme(storedTheme);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", theme);\r\n  }, [theme]);\r\n\r\n  const hashKey = (key: string) => CryptoJS.SHA256(key).toString();\r\n\r\n  const unlockPasswordManager = () => {\r\n    if (encryptionKey && confirmKey) {\r\n      if (validateKey(encryptionKey, confirmKey)) {\r\n        setIsUnlocked(true);\r\n        setKeyError(\"\");\r\n      } else {\r\n        setKeyError(\"Encryption key must be at least 8 characters long, contain uppercase, lowercase, number, and special character.\");\r\n      }\r\n    } else {\r\n      setKeyError(\"Please enter and confirm the encryption key.\");\r\n    }\r\n  };\r\n\r\n  const validateKey = (key: string, confirmKey: string) => {\r\n    const minLength = 8;\r\n    const hasUpperCase = /[A-Z]/.test(key);\r\n    const hasLowerCase = /[a-z]/.test(key);\r\n    const hasNumbers = /\\d/.test(key);\r\n    const hasSpecialChars = /[!@#$%^&*(),.?\":{}|<>]/.test(key);\r\n    return key.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChars && key === confirmKey;\r\n  };\r\n\r\n  const savePassword = () => {\r\n    if (id && password && description && encryptionKey) {\r\n      const encryptedId = CryptoJS.AES.encrypt(id, encryptionKey).toString();\r\n      const encryptedPassword = CryptoJS.AES.encrypt(password, encryptionKey).toString();\r\n      const encryptedDescription = CryptoJS.AES.encrypt(description, encryptionKey).toString();\r\n\r\n      const newPasswords = [...passwords, { id: encryptedId, password: encryptedPassword, description: encryptedDescription }];\r\n      setPasswords(newPasswords);\r\n      setId(\"\");\r\n      setPassword(\"\");\r\n      setDescription(\"\");\r\n    } else {\r\n      alert(\"Please enter ID, password, and description.\");\r\n    }\r\n  };\r\n\r\n  const backupPasswords = () => {\r\n    const jsonPasswords = JSON.stringify(passwords);\r\n    const blob = new Blob([jsonPasswords], { type: \"application/json\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"passwords_backup.json\";\r\n    link.click();\r\n  };\r\n\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  const handleFileSelect = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const restorePasswords = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    console.log('file',file)\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const restoredPasswords = JSON.parse(e.target?.result as string);\r\n        const updatedPasswords = [...passwords];\r\n\r\n        restoredPasswords.forEach((restoredPassword: { id: string; password: string; description: string }) => {\r\n          if (!updatedPasswords.some(p => p.id === restoredPassword.id)) {\r\n            updatedPasswords.push(restoredPassword);\r\n          }\r\n        });\r\n\r\n        setPasswords(updatedPasswords);\r\n        if (fileInputRef.current) {\r\n          fileInputRef.current.value = \"\";\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const deletePassword = (encryptedId: string) => {\r\n    const updatedPasswords = passwords.filter(password => password.id !== encryptedId);\r\n    setPasswords([...updatedPasswords]);\r\n  };\r\n\r\n  const togglePassword = (encryptedId: string, encryptedPassword: string, encryptedDescription: string) => {\r\n    const idElement = document.getElementById(`id-${encryptedId}`);\r\n    const passElement = document.getElementById(`pass-${encryptedId}`);\r\n    const descriptionElement = document.getElementById(`desc-${encryptedId}`);\r\n\r\n    if (idElement?.textContent === \"********\" && passElement?.textContent === \"********\" && descriptionElement?.textContent === \"********\") {\r\n      try {\r\n        const decryptedId = CryptoJS.AES.decrypt(encryptedId, encryptionKey).toString(CryptoJS.enc.Utf8);\r\n        const decryptedPassword = CryptoJS.AES.decrypt(encryptedPassword, encryptionKey).toString(CryptoJS.enc.Utf8);\r\n        const decryptedDescription = CryptoJS.AES.decrypt(encryptedDescription, encryptionKey).toString(CryptoJS.enc.Utf8);\r\n\r\n        if (!decryptedId || !decryptedPassword || !decryptedDescription) throw new Error(\"Invalid Key\");\r\n\r\n        idElement.textContent = decryptedId;\r\n        passElement.textContent = decryptedPassword;\r\n        descriptionElement.textContent = decryptedDescription;\r\n      } catch (error) {\r\n        alert(\"Incorrect encryption key. Unable to decrypt.\");\r\n      }\r\n    } else {\r\n      idElement!.textContent = \"********\";\r\n      passElement!.textContent = \"********\";\r\n      descriptionElement!.textContent = \"********\";\r\n    }\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  return (\r\n    <div style={theme === \"light\" ? styles.lightMainBody : styles.darkMainBody} id=\"mainBody\">\r\n      <div style={theme === \"light\" ? styles.lightContainer : styles.darkContainer} id=\"container\">\r\n        <h2 style={styles.title}>Secure Password Manager</h2>\r\n\r\n       \r\n        <button onClick={toggleTheme} style={styles.themeToggleButton}>\r\n          {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\r\n        </button>\r\n\r\n        {!isUnlocked && (\r\n          <div style={styles.formContainer}>\r\n            <div style={styles.inputGroup}>\r\n              <label htmlFor=\"encryptionKey\" style={{ marginBottom: 4 }}>Enter Encryption Key:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"encryptionKey\"\r\n                placeholder=\"Enter master password\"\r\n                value={encryptionKey}\r\n                onChange={(e) => setEncryptionKey(e.target.value)}\r\n                style={theme === \"light\" ? styles.inputLight : styles.inputDark}\r\n              />\r\n            </div>\r\n            <div style={styles.inputGroup}>\r\n              <label htmlFor=\"confirmKey\" style={{ marginBottom: 4 }}>Confirm Encryption Key:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmKey\"\r\n                placeholder=\"Confirm master password\"\r\n                value={confirmKey}\r\n                onChange={(e) => setConfirmKey(e.target.value)}\r\n                style={theme === \"light\" ? styles.inputLight : styles.inputDark}\r\n              />\r\n            </div>\r\n            <button onClick={unlockPasswordManager} style={styles.button}>Unlock</button>\r\n            {keyError && <div style={styles.errorMessage}>{keyError}</div>}\r\n          </div>\r\n        )}\r\n\r\n        {isUnlocked && (\r\n          <div style={styles.passwordSection}>\r\n            <div style={styles.inputGroup}>\r\n              <label htmlFor=\"id\">ID:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter website or ID\"\r\n                value={id}\r\n                onChange={(e) => setId(e.target.value)}\r\n                style={theme === \"light\" ? styles.inputLight : styles.inputDark}\r\n              />\r\n            </div>\r\n            <div style={styles.inputGroup}>\r\n              <label htmlFor=\"password\">Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                style={theme === \"light\" ? styles.inputLight : styles.inputDark}\r\n              />\r\n            </div>\r\n            <div style={styles.inputGroup}>\r\n              <label htmlFor=\"description\">Description:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"description\"\r\n                placeholder=\"Enter a description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                style={theme === \"light\" ? styles.inputLight : styles.inputDark}\r\n              />\r\n            </div>\r\n            <button onClick={savePassword} style={styles.button}>Save Credentials</button>\r\n\r\n            <div style={styles.passwordList}>\r\n              <div style={styles.savedPasswordBars}> \r\n              <h3>Saved Passwords</h3>\r\n              <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              onChange={restorePasswords}\r\n              style={{ display: 'none' }} // Hide the input\r\n              />\r\n              <button onClick={backupPasswords} style={styles.backupPasswordButton} >Backup</button>\r\n              <button onClick={handleFileSelect} style={styles.backupPasswordButton} >Restore</button>\r\n              </div>\r\n             \r\n              <ul style={styles.list}>\r\n                {passwords.map((entry) => (\r\n                  <li key={entry.id} style={styles.listItem}>\r\n                    ID: <span id={`id-${entry.id}`}>********</span><br />\r\n                    Password: <span id={`pass-${entry.id}`}>********</span><br />\r\n                    Description: <span id={`desc-${entry.id}`}>********</span><br />\r\n                    <button onClick={() => togglePassword(entry.id, entry.password, entry.description)} style={styles.toggleButton}>\r\n                      Show/Hide Credentials\r\n                    </button>\r\n                    <button onClick={() => deletePassword(entry.id)} style={styles.deleteButton}>\r\n                      Delete\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default SecurePasswordManager;\r\n\r\n// commit for later unmerging feature from mster","import React from 'react';\nimport SecurePasswordManager from './passwordManager';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <SecurePasswordManager></SecurePasswordManager>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}